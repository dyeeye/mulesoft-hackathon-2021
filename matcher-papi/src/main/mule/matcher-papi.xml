<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:solace="http://www.mulesoft.org/schema/mule/solace"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/solace http://www.mulesoft.org/schema/mule/solace/current/mule-solace.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<flow name="matcher-main-flow" doc:id="5c16e41d-4fd8-449b-8cb7-29f8730c6a10" >
		<solace:consumer-source doc:name="EndpointListener" doc:id="6e9c9087-de0c-413e-bbd3-e8c4c2faec0e" config-ref="Solace_Connector_Config" address="${secure::broker.queue.image}" endpoint-type="QUEUE" contentType="application/json"/>
		<logger level="INFO" doc:name="Start" doc:id="72177c16-419e-47ed-96f9-8890922f9a7e" message="Processing new order image"/>
		<set-variable value="#[payload.consumer]" doc:name="Consumer ID" doc:id="323fbcc3-fdb0-4bf6-9bd9-0fe4fcf53637" variableName="consumerId"/>
		<flow-ref doc:name='upload-file-flow' doc:id="ad4777ef-ff5a-436f-aa40-4bdf1e3489d4" name="upload-file-flow"/>
		<flow-ref doc:name="rekognize-labels-flow" doc:id="e589f6a5-b943-4c10-805f-24cad3380202" name="rekognize-labels-flow" target="labels"/>
		<choice doc:name="Labels detected?" doc:id="be92e90e-90ed-4dfd-8a1e-c9e48aaf8832" >
			<when expression="#[sizeOf(payload.labels) &gt; 0]">
				<flow-ref doc:name="get-orders-flow" doc:id="dcdf8fe0-9cd2-4dcb-8ed6-2087762bec5f" name="get-orders-flow"/>
				<ee:transform doc:name="Matched Orders" doc:id="c2497417-0e68-4d30-b382-9a06e26d338d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	consumer: vars.consumerId,
	orders: payload.orders map {
        orderNumber: $.number,
        id: $.id
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="No Orders" doc:id="e452432d-40fc-4cb3-9455-e92ce3fe9866" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	orders: []
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<solace:publish doc:name="Orders" doc:id="f0508f71-ad2a-444b-963c-abcba0b15c29" config-ref="Solace_Connector_Config" address="${secure::broker.queue.order}" endpoint-type="QUEUE">
			<solace:message contentType="application/json" correlationId="#[correlationId]" />
		</solace:publish>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="b99e8c65-caff-49ca-8d93-2751a0d133e0" >
				<ee:transform doc:name="Error" doc:id="a9373ed5-8c8b-484a-a89f-cd553d48dd85" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	error: error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<solace:publish doc:name="Orders Error" doc:id="e3e5f8eb-c413-4142-8a40-8471195160f0" config-ref="Solace_Connector_Config" address="${secure::broker.queue.order}" endpoint-type="QUEUE" >
					<solace:message contentType="application/json" correlationId="#[correlationId]" />
				</solace:publish>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="upload-file-flow" doc:id="cb96cfec-17f7-465f-beb1-af396d011b90" >
		<ee:transform doc:name="New File" doc:id="ade4874d-d38d-40d8-9b86-854b264fef8a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	content: payload.image,
	fileName: '$(uuid()).png'
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="POST" doc:name="Save Image to S3" doc:id="5e0212d2-45e3-4455-9913-5d26e875496c" config-ref="S3-SAPI_Request_configuration" path="/files" sendCorrelationId="ALWAYS">
			<http:headers ><![CDATA[#[{
	client_id: Mule::p('secure::mule.clientId'),
	client_secret: Mule::p('secure::mule.clientSecret')
}]]]></http:headers>
		</http:request>
	</flow>
	<flow name="rekognize-labels-flow" doc:id="f652df9e-5691-485e-8759-faf0e62a86f8" >
		<ee:transform doc:name="Rekognize Request" doc:id="82903352-1943-4cf1-937c-b6a32949d2cc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	fileName: payload.fileName,
	metadata: payload.metadata map {
		key: $.key,
		value: $.value
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="POST" doc:name="Rekognize" doc:id="4879fd00-f502-414a-8f71-dc5dc5dc6b2c" config-ref="Rekogntion-SAPI_Request_configuration" path="/images" sendCorrelationId="ALWAYS">
			<http:headers ><![CDATA[#[{
	client_id: Mule::p('secure::mule.clientId'),
	client_secret: Mule::p('secure::mule.clientSecret')
}]]]></http:headers>
		</http:request>
	</flow>
	<flow name="get-orders-flow" doc:id="741519dd-9e5f-42b9-9476-3611b961cd63" >
		<ee:transform doc:name="Order Request" doc:id="ebab2869-69e5-471a-a2ec-b4eb04da50b2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import entrySet from dw::core::Objects
---
{
	products: entrySet(payload.labels groupBy $.name) map {
		code: $.key,
		quantity: sizeOf($.value)
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="POST" doc:name="Match Orders" doc:id="f0429802-4eba-4562-a51f-a25bcb6369c3" config-ref="Order-Salesforce-SAPI_Request_configuration" path="/order/products" sendCorrelationId="ALWAYS">
			<http:headers ><![CDATA[#[{
	client_id: Mule::p('secure::mule.clientId'),
	client_secret: Mule::p('secure::mule.clientSecret')
}]]]></http:headers>
		</http:request>
	</flow>
</mule>
